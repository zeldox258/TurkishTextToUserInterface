/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package turkish.text.to.code;

import java.awt.List;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import static java.util.Map.entry;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author omera
 */
public class mainScreen extends javax.swing.JFrame {
    Set<String> set = new HashSet<>(Arrays.asList("ordan", "bir", "form", "bana", "olan","ve","bilgileri","guzel","arka","plan","ayrica","da","olsun","icerisinde","alan","arkaplani","renkli","arkaplan"));
    Map<String,String> colors = Map.ofEntries(
        entry("sari", "yellow"),
        entry("kirmizi", "red")
    );
    String generalColor = " #f2f2f2";
    String imageInfo = "";
    int idCounter = 0;
    boolean radioFlag = false;
    boolean dropFlag = false;
    ArrayList<String> radioButtons = new ArrayList<>();
    String radioOrDropText = "";
    /**
     * Creates new form mainScreen
     */
    public mainScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaOfRequest = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textAreaOfRequest.setColumns(20);
        textAreaOfRequest.setRows(5);
        jScrollPane1.setViewportView(textAreaOfRequest);

        jButton1.setText("Convert to User Interface");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 911, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(335, 335, 335))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ArrayList<String> reducer(String[] arr){
        ArrayList<String> result = new ArrayList<>();
        
        for(String s : arr){
            if(!set.contains(s)){
                if(radioFlag && !s.equals(")")){
                    radioOrDropText += "<input type=\"radio\" id=\""+ idCounter +"\" name=\""+radioButtons.size()+"\" >\n" +
                    "  <label for=\""+ idCounter++ +"\">"+s+"</label><br>";
                }
                else if(dropFlag && !s.equals("]")){
                    radioOrDropText += "<input type=\"radio\" id=\""+ idCounter +"\" name=\""+radioButtons.size()+"\" >\n" +
                    "  <label for=\""+ idCounter++ +"\">"+s+"</label><br>";
                }
                else if(colors.containsKey(s)){
                    generalColor = colors.get(s);
                    System.out.println(s+" -> "+generalColor);

                }
                else if(s.startsWith("resim") || s.startsWith("fotograf")){
                    if(s.startsWith("resim")){
                        imageInfo = s.substring(5);
                        System.out.println(s.substring(5));
                    }
                    else{
                        imageInfo = s.substring(8);
                        System.out.println(s.substring(8));
                    }
                }
                else if(s.charAt(s.length()-1) == '('){
                    radioOrDropText = "<p>"+ s.substring(0, s.length()-1)+"</p>\n";
                    radioFlag = true;
                    
                }
                else if(s.charAt(s.length()-1) == '['){
                    radioOrDropText = "<p>"+ s.substring(0, s.length()-1)+"</p>\n";
                    dropFlag = true;
                }
                else if( s.equals(")") ){
                    
                    result.add("Radio");
                    System.out.println("Radio");
                    radioFlag = false;
                    radioButtons.add(radioOrDropText);
                }
                else if( s.equals("]") ){
                    result.add("Drop");
                    System.out.println("Drop");
                    dropFlag = false;
                }
                else{
                    String temp = s.substring(0, 1).toUpperCase() + s.substring(1);
                    result.add(temp);
                    System.out.println(temp);
                }
                
            }
            

        }
        
        return result;
            
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String[] words = textAreaOfRequest.getText().split(" ");
        File yourFile = new File("result.html");
        ArrayList<String> reducedText = reducer(words);
        
        try { 
            yourFile.createNewFile(); // if file already exists will do nothing 
            FileOutputStream oFile = new FileOutputStream(yourFile, false);
            PrintStream printStream = new PrintStream(oFile);
            printStream.print("<!DOCTYPE html>\n" +
                                "<html>\n" +
                                "<style>\n" +
                                "input[type=text], select {\n" +
                                "  width: 100%;\n" +
                                "  padding: 12px 20px;\n" +
                                "  margin: 8px 0;\n" +
                                "  display: inline-block;\n" +
                                "  border: 1px solid #ccc;\n" +
                                "  border-radius: 4px;\n" +
                                "  box-sizing: border-box;\n" +
                                "}\n" +
                                "img {"+
                                "  display: block;\n"+
                                "  margin-left: auto;\n"+
                                "  margin-right: auto;\n"+
                                "  width: 50%;\n"+
                                "  border-radius: 50%;\n"+
                                "}\n"+
                                "\n" +
                                "input[type=submit] {\n" +
                                "  width: 100%;\n" +
                                "  background-color: #4CAF50;\n" +
                                "  color: white;\n" +
                                "  padding: 14px 20px;\n" +
                                "  margin: 8px 0;\n" +
                                "  border: none;\n" +
                                "  border-radius: 4px;\n" +
                                "  cursor: pointer;\n" +
                                "}\n" +
                                "\n" +
                                "input[type=submit]:hover {\n" +
                                "  background-color: #45a049;\n" +
                                "}\n" +
                                "\n" +
                                "div {\n" +
                                "  border-radius: 5px;\n" +
                                "  background-color: "+generalColor+";\n" +
                                "  padding: 20px;\n" +
                                "}\n" +
                                "</style>\n" +
                                "<body>\n" +
                                "\n" +
                                "\n" +
                                "<div>\n" +
                                "  <form action=\"/action_page.php\">");
            
            
            
            // Our things will be added to here
            if(imageInfo.length()!=0){
                printStream.print("\n<img src=\"./images/"+imageInfo+".jpg"+"\" alt=\""+imageInfo+"\">\n");
            }
            
            for(String s : reducedText){
                if(s.equals("Radio")){
                    printStream.print(radioButtons.get(0));
                    radioButtons.remove(0);
                }
                else if(s.equals("Drop")){
                    
                }
                else{
                    printStream.print("\n<label for=\""+s+"\">"+s+"</label>\n" +
                                  "<input type=\"text\" id=\""+s+"\" name=\""+s+"\" placeholder=\"" +s+"\">");
                }
           }
            
            
            
            
            
            printStream.print("<input type=\"submit\" value=\"Gonder\">\n" +
                                "  </form>\n" +
                                "</div>\n" +
                                "\n" +
                                "</body>\n" +
                                "</html>");


            printStream.close();
        } 
        catch (FileNotFoundException ex) {
            Logger.getLogger(mainScreen.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (IOException ex) {
            Logger.getLogger(mainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textAreaOfRequest;
    // End of variables declaration//GEN-END:variables
}
